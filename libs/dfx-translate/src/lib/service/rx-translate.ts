import {inject} from '@angular/core';
import {combineLatest, first, map, Observable, of, switchMap} from 'rxjs';
import {TranslateStore} from './translate.store';
import {translationKeys} from '../translationKeys';
import {TRANSLATE_DEFAULT_UNDEFINED_KEY_TO} from '../features/default-undefined-key-to/default-undefined-key-to';

export function dfxTranslate$(): (key: translationKeys) => Observable<string> {
  const store = inject(TranslateStore);
  const defaultUndefinedKeyTo = inject(TRANSLATE_DEFAULT_UNDEFINED_KEY_TO);

  return (key: translationKeys): Observable<string> => {
    if (!key) {
      return of(defaultUndefinedKeyTo);
    }

    return combineLatest([
      store.translations$.pipe(map((translations) => translations[key])),
      store.autoGeneratedTranslations$.pipe(map((translations) => translations[key])),
      of(key),
    ]).pipe(
      switchMap(([translation, autoGeneratedTranslation, lKey]) => of(translation ?? autoGeneratedTranslation ?? lKey)),
      first()
    );
  };
}
